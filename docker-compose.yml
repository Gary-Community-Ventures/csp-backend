services:
  backend:
    build: .
    # For development, use run.py for Flask's built-in server with hot reloading
    command: python run.py
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=development
      - DEBUG=True
      - TZ=America/Denver
      # Google Sheets variables
      - GOOGLE_SPREADSHEET_ID=${GOOGLE_SPREADSHEET_ID}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      # messaging
      - FROM_EMAIL_INTERNAL=${FROM_EMAIL_INTERNAL}
      - FROM_EMAIL_EXTERNAL=${FROM_EMAIL_EXTERNAL}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
    restart: on-failure
    volumes:
      - .:/app # Bind mount for hot reloading

  # RQ Worker for processing jobs
  worker:
    build: .
    command: python worker.py
    init: true
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=development
      - DEBUG=True
      - TZ=America/Denver
    restart: on-failure
    volumes:
      - .:/app

  # RQ Scheduler for scheduled jobs
  scheduler:
    build: .
    command: python scheduler.py
    init: true
    depends_on:
      - redis
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=development
      - TZ=America/Denver
    restart: on-failure
    volumes:
      - .:/app

  # Redis for job queue
  redis:
    image: redis:8.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # RQ Dashboard for monitoring
  rq-dashboard:
    image: eoranged/rq-dashboard
    init: true
    ports:
      - "9181:9181"
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT_HOST}:5432"

volumes:
  postgres_data:
  redis_data:
