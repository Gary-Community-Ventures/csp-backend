services:
  backend:
    build: .
    # For development, use run.py for Flask's built-in server with hot reloading
    command: python run.py
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=development
      - DEBUG=True
      # Pass Sentry DSN from host .env
      - SENTRY_DSN=${SENTRY_DSN}
      - SENTRY_TRACES_SAMPLE_RATE=${SENTRY_TRACES_SAMPLE_RATE}
      - SENTRY_PROFILES_SAMPLE_RATE=${SENTRY_PROFILES_SAMPLE_RATE}
      - APP_VERSION=${APP_VERSION}
      # Pass Clerk variables from host .env
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - TZ=America/Denver
    restart: on-failure
    volumes:
      - .:/app # Bind mount for hot reloading

  # RQ Worker for processing jobs
  worker:
    build: .
    command: rq worker --url redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=development
      - DEBUG=True
      - SENTRY_DSN=${SENTRY_DSN}
      - SENTRY_TRACES_SAMPLE_RATE=${SENTRY_TRACES_SAMPLE_RATE}
      - SENTRY_PROFILES_SAMPLE_RATE=${SENTRY_PROFILES_SAMPLE_RATE}
      - APP_VERSION=${APP_VERSION}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - TZ=America/Denver
    restart: on-failure
    volumes:
      - .:/app

  # RQ Scheduler for scheduled jobs
  scheduler:
    build: .
    command: python scheduler.py
    depends_on:
      - redis
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=development
      - TZ=America/Denver
    restart: on-failure
    volumes:
      - .:/app

  # Redis for job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # RQ Dashboard for monitoring
  rq-dashboard:
    image: eoranged/rq-dashboard
    ports:
      - "9181:9181"
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT_HOST}:5432"

volumes:
  postgres_data:
  redis_data: