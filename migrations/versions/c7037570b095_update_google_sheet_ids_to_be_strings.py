"""Update google sheet ids to be strings

Revision ID: c7037570b095
Revises: ff81a8277415
Create Date: 2025-08-07 14:47:50.375451

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'c7037570b095'
down_revision = 'ff81a8277415'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, add temporary string columns
    with op.batch_alter_table('allocated_care_day', schema=None) as batch_op:
        batch_op.add_column(sa.Column('provider_google_sheets_id_temp', sa.String(length=64)))
    
    with op.batch_alter_table('month_allocation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('google_sheets_child_id_temp', sa.String(length=64)))
    
    with op.batch_alter_table('payment_rate', schema=None) as batch_op:
        batch_op.add_column(sa.Column('google_sheets_provider_id_temp', sa.String(length=64)))
        batch_op.add_column(sa.Column('google_sheets_child_id_temp', sa.String(length=64)))
    
    with op.batch_alter_table('payment_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('google_sheets_provider_id_temp', sa.String(length=64)))
        batch_op.add_column(sa.Column('google_sheets_child_id_temp', sa.String(length=64)))
    
    # Convert data from integer to string
    connection = op.get_bind()
    
    # Convert allocated_care_day
    connection.execute(sa.text("""
        UPDATE allocated_care_day 
        SET provider_google_sheets_id_temp = CAST(provider_google_sheets_id AS TEXT)
        WHERE provider_google_sheets_id IS NOT NULL
    """))
    
    # Convert month_allocation
    connection.execute(sa.text("""
        UPDATE month_allocation 
        SET google_sheets_child_id_temp = CAST(google_sheets_child_id AS TEXT)
        WHERE google_sheets_child_id IS NOT NULL
    """))
    
    # Convert payment_rate
    connection.execute(sa.text("""
        UPDATE payment_rate 
        SET google_sheets_provider_id_temp = CAST(google_sheets_provider_id AS TEXT)
        WHERE google_sheets_provider_id IS NOT NULL
    """))
    connection.execute(sa.text("""
        UPDATE payment_rate 
        SET google_sheets_child_id_temp = CAST(google_sheets_child_id AS TEXT)
        WHERE google_sheets_child_id IS NOT NULL
    """))
    
    # Convert payment_request
    connection.execute(sa.text("""
        UPDATE payment_request 
        SET google_sheets_provider_id_temp = CAST(google_sheets_provider_id AS TEXT)
        WHERE google_sheets_provider_id IS NOT NULL
    """))
    connection.execute(sa.text("""
        UPDATE payment_request 
        SET google_sheets_child_id_temp = CAST(google_sheets_child_id AS TEXT)
        WHERE google_sheets_child_id IS NOT NULL
    """))
    
    # Drop old columns and rename temp columns
    with op.batch_alter_table('allocated_care_day', schema=None) as batch_op:
        batch_op.drop_column('provider_google_sheets_id')
        batch_op.alter_column('provider_google_sheets_id_temp', 
                             new_column_name='provider_google_sheets_id',
                             nullable=False)
    
    with op.batch_alter_table('month_allocation', schema=None) as batch_op:
        batch_op.drop_column('google_sheets_child_id')
        batch_op.alter_column('google_sheets_child_id_temp', 
                             new_column_name='google_sheets_child_id',
                             nullable=False)
    
    with op.batch_alter_table('payment_rate', schema=None) as batch_op:
        batch_op.drop_column('google_sheets_provider_id')
        batch_op.drop_column('google_sheets_child_id')
        batch_op.alter_column('google_sheets_provider_id_temp', 
                             new_column_name='google_sheets_provider_id',
                             nullable=False)
        batch_op.alter_column('google_sheets_child_id_temp', 
                             new_column_name='google_sheets_child_id',
                             nullable=False)
    
    with op.batch_alter_table('payment_request', schema=None) as batch_op:
        batch_op.drop_column('google_sheets_provider_id')
        batch_op.drop_column('google_sheets_child_id')
        batch_op.alter_column('google_sheets_provider_id_temp', 
                             new_column_name='google_sheets_provider_id',
                             nullable=False)
        batch_op.alter_column('google_sheets_child_id_temp', 
                             new_column_name='google_sheets_child_id',
                             nullable=False)

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add temporary integer columns
    with op.batch_alter_table('payment_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('google_sheets_child_id_temp', sa.INTEGER()))
        batch_op.add_column(sa.Column('google_sheets_provider_id_temp', sa.INTEGER()))
    
    with op.batch_alter_table('payment_rate', schema=None) as batch_op:
        batch_op.add_column(sa.Column('google_sheets_child_id_temp', sa.INTEGER()))
        batch_op.add_column(sa.Column('google_sheets_provider_id_temp', sa.INTEGER()))
    
    with op.batch_alter_table('month_allocation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('google_sheets_child_id_temp', sa.INTEGER()))
    
    with op.batch_alter_table('allocated_care_day', schema=None) as batch_op:
        batch_op.add_column(sa.Column('provider_google_sheets_id_temp', sa.INTEGER()))
    
    # Convert data back from string to integer
    connection = op.get_bind()
    
    connection.execute(sa.text("""
        UPDATE payment_request 
        SET google_sheets_child_id_temp = CAST(google_sheets_child_id AS INTEGER)
        WHERE google_sheets_child_id IS NOT NULL
    """))
    connection.execute(sa.text("""
        UPDATE payment_request 
        SET google_sheets_provider_id_temp = CAST(google_sheets_provider_id AS INTEGER)
        WHERE google_sheets_provider_id IS NOT NULL
    """))
    
    connection.execute(sa.text("""
        UPDATE payment_rate 
        SET google_sheets_child_id_temp = CAST(google_sheets_child_id AS INTEGER)
        WHERE google_sheets_child_id IS NOT NULL
    """))
    connection.execute(sa.text("""
        UPDATE payment_rate 
        SET google_sheets_provider_id_temp = CAST(google_sheets_provider_id AS INTEGER)
        WHERE google_sheets_provider_id IS NOT NULL
    """))
    
    connection.execute(sa.text("""
        UPDATE month_allocation 
        SET google_sheets_child_id_temp = CAST(google_sheets_child_id AS INTEGER)
        WHERE google_sheets_child_id IS NOT NULL
    """))
    
    connection.execute(sa.text("""
        UPDATE allocated_care_day 
        SET provider_google_sheets_id_temp = CAST(provider_google_sheets_id AS INTEGER)
        WHERE provider_google_sheets_id IS NOT NULL
    """))
    
    # Drop string columns and rename temp columns back
    with op.batch_alter_table('payment_request', schema=None) as batch_op:
        batch_op.drop_column('google_sheets_child_id')
        batch_op.drop_column('google_sheets_provider_id')
        batch_op.alter_column('google_sheets_child_id_temp', 
                             new_column_name='google_sheets_child_id',
                             nullable=False)
        batch_op.alter_column('google_sheets_provider_id_temp', 
                             new_column_name='google_sheets_provider_id',
                             nullable=False)
    
    with op.batch_alter_table('payment_rate', schema=None) as batch_op:
        batch_op.drop_column('google_sheets_child_id')
        batch_op.drop_column('google_sheets_provider_id')
        batch_op.alter_column('google_sheets_child_id_temp', 
                             new_column_name='google_sheets_child_id',
                             nullable=False)
        batch_op.alter_column('google_sheets_provider_id_temp', 
                             new_column_name='google_sheets_provider_id',
                             nullable=False)
    
    with op.batch_alter_table('month_allocation', schema=None) as batch_op:
        batch_op.drop_column('google_sheets_child_id')
        batch_op.alter_column('google_sheets_child_id_temp', 
                             new_column_name='google_sheets_child_id',
                             nullable=False)
    
    with op.batch_alter_table('allocated_care_day', schema=None) as batch_op:
        batch_op.drop_column('provider_google_sheets_id')
        batch_op.alter_column('provider_google_sheets_id_temp', 
                             new_column_name='provider_google_sheets_id',
                             nullable=False)
    # ### end Alembic commands ###